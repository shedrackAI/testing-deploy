import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import ImageUpload from "../components/ImageUpload";
import Popup from "../components/Popup";

import Post from "../components/Post";
import Posts from "../components/Posts";
import ProfileInfo from "../components/ProfileInfo";
import Settings from "../components/Settings";
import SupportCard from "../components/SupportCard";
import { AppContext } from "../contexts/AppContext";
import { verifyPayment } from "../utils/verifyPaymentF";

export default function MyPage() {
  const route = useRouter();
  const [openPopup, setOpenPopup] = useState(false);
  const [validReference, setValidReference] = useState("");
  const [funderDetails, setFunderDetails] = useState({});
  const {
    currentPage,
    setCurrentPage,
    changeCurrentPageName,
    userDetails,
    setUserDetails,
    notifications,
    getAllSuppoters,
    setSharePopup,
    sharePopup
  } = useContext(AppContext);

  useEffect(() => {
    changeCurrentPageName("profile");
  }, [currentPage, setCurrentPage]);

  useEffect(() => {
    let token;
    if (typeof window !== "undefined") {
      token = JSON.parse(localStorage.getItem("userToken"));
      setFunderDetails(JSON.parse(localStorage.getItem("supportDetails")));
      const urlParams = new URLSearchParams(window.location.search);
      setValidReference(urlParams.get("reference"));
    }
    const apiEndPoint = "http://localhost:5000/api/v1/u/find/user";

    const getUser = async () => {
      await axios
        .get(apiEndPoint, {
          headers: {
            Authorization: `Bearer ${token.accessToken}`,
            'Access-Control-Allow-Origin': '*'
          }
        })
        .then((response) => {
          console.log(response.data);
          setUserDetails({
            id: response.data._id,
            name: response.data.name,
            bio: response.data.aboutMe,
            instagram: response.data.instagramHandle,
            twitter: response.data.twitterHandle,
            website: response.data.website,
            email: response.data.email,
            subaccountCode: response.data.subaccountCode,
            bankCode: response.data.bankCode,
            bankName: response.data.bankName,
            accountNumber: response.data.accountNumber,
            accountName: response.data.accountName,
            supporters: response.data.supportersCount
          });
          getAllSuppoters(response.data._id);
        })
        .catch((error) => {
          console.log(error);
        });
    };

    getUser();
  }, []); 

  useEffect(() => {
    function getParameterByName(name, url = window.location.href) {
      name = name.replace(/[\[\]]/g, "\\$&");
      var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return "";
      return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
    const addSupport = () => {
      const apiEndPoint = "http://localhost:5000/api/v1/u/friend/support";
      const details = {
        from: funderDetails.name,
        to: "ughioh",
        message: funderDetails.text,
        reference: funderDetails.reference,
        token: funderDetails.token,
        amount: funderDetails.amount,
        user_id: funderDetails.user_to_id,
        profileImg: ""
      };
      console.log(details);
      axios
        .post(apiEndPoint, details)
        .then((response) => {
          if (typeof window !== "undefined") {
            localStorage.removeItem("supportDetails");
          }
          setFunderDetails("");
          getAllSuppoters(funderDetails.user_to_id);
        })
        .catch((error) => {
          console.log(error);
        });
    };

    const verifyPayment = () => {
      // if(validReference ) {
      const apiEndPoint = "http://localhost:5000/api/v1/u/payment/verify";
      const details = {
        reference: getParameterByName("reference")
      };
      axios
        .post(apiEndPoint, details)
        .then((response) => {
          addSupport();
          // window.location.reload();
        })
        .catch((error) => {
          console.log(error);
        });
      // }
    };

    verifyPayment();
  }, [validReference]);

  const [copied, setCopied] = useState(false);

  function copyToClipboard() {
    navigator.clipboard.writeText("text");
    setCopied(true);
  }

  return (
    <>
      <Head>
        <title>Profile â€” Fund a Friend</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className="px-10 w-full">
        <Popup>
          <Settings />
        </Popup>

        {sharePopup && (
          <div>
            <div
              className="fixed z-50 top-0 right-0 bottom-0 left-0 flex px-5 justify-center items-center backdrop-blur-sm overflow-y-scroll"
              onClick={() => setSharePopup(false)}
            >
              <div
                className="rounded-3xl bg-white w-full max-w-[500px] p-5"
                onClick={(e) => e.stopPropagation()}
              >
                <button onClick={copyToClipboard}>Copy to Clipboard</button>
                {copied && (
                  <span style={{ color: "green" }}>Copied to clipboard!</span>
                )}
              </div>
            </div>
          </div>
        )}

        <section className="w-full space-y-6">
          {/* Container for Profile picture an user details */}

          <ProfileInfo userDetails={userDetails} />
          <SupportCard
            openPopup={openPopup}
            setOpenPopup={setOpenPopup}
            disable={false}
          />
        </section>

        <section className="w-full flex justify-center mt-9">
          <div className="max-w-[500px] flex flex-col flex-1">
            {notifications.length >= 1 ? (
              <h1 className="text-[#808080] font-semibold text-sm">
                Recent Supporters
              </h1>
            ) : (
              <h1></h1>
            )}
            <Posts />
          </div>
        </section>
      </main>
    </>
  );
}

